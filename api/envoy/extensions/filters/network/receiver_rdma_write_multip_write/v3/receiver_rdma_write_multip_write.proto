syntax = "proto3";

package envoy.extensions.filters.network.receiver_rdma_write_multip_write.v3;

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.receiver_rdma_write_multip_write.v3";
option java_outer_classname = "ReceiverRDMAWriteMultipWriteProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/receiver_rdma_write_multip_write/v3;receiver_rdma_write_multip_writev3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: ReceiverRDMAWriteMultipWrite]
// ReceiverRDMAWriteMultipWrite :ref:`configuration overview <config_network_filters_receiver_rdma_write_multip_write>`.
// [#extension: envoy.filters.network.receiver_rdma_write_multip_write]

message ReceiverRDMAWriteMultipWrite {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.network.receiver_rdma_write_multip_write.v2.ReceiverRDMAWriteMultipWrite";
  uint32 payload_bound = 1;
  uint32 circle_size = 2;
  uint32 time_to_write = 3;
  uint32 shared_buffer_size = 4;
}
